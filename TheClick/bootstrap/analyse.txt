• Welche URL wird aufgerufen wenn Sie versuchen sich anzumelden?
Request URL: http://localhost/2018-uebung-04-DanielGasserFH/aufgabe02/login

• Welche „Method“ wird im Reiter Network angezeigt?
POST Methode wird verwendet

• Welche URL wird aufgerufen wenn Sie versuchen sich zu registrieren?
Request URL: http://localhost/2018-uebung-04-DanielGasserFH/aufgabe02/login


• Welche „Method“ wird im Reiter Network angezeigt?
POST Methode -
(falls ich das richtige meine)

• Versuchen Sie einen Nutzer mit dem Namen test zu registrieren – wie ist der Response?
{"result":false,"data":{"errorFields":{"name":"Benutzername ist schon vorhanden!"}}}

• Legen Sie eine Neue Adresse an – wie ist hier die Method? Wie lautet der Name/aufgerufene URL?
Fenster für das erstellen einer neuen Adresse: http://localhost/2018-uebung-04-DanielGasserFH/aufgabe02/api/address/?returnView=true
erstellen: POST ---- http://localhost/2018-uebung-04-DanielGasserFH/aufgabe02/api/address/

• Bearbeiten Sie eine Adresse und klicken Sie auf speichern – wie ist hier die Method?
(evtl. Haken bei „Preserve log“ setzen) Wie lautet hier der Name/aufgerufene
URL?
Request Methode: PUT
http://localhost/2018-uebung-04-DanielGasserFH/aufgabe02/api/address/


• Löschen Sie die neu angelegte Adresse – wie ist hier die Method? Wie lautet
hier der Name/aufgerufene URL?
Request URL: http://localhost/2018-uebung-04-DanielGasserFH/aufgabe02/api/address/
METHODE: DELETE

• Probieren Sie einmal eine eigene Route anzulegen. Beispielsweise, dass Sie
eine zusätzliche url für den Login definieren (z.B. /anmelden) – der LoginController
soll aber weiterhin verwendet werden. Dies können Sie in der Datei includes/routes.php
vornehmen. Rufen Sie anschließend die URL auf. Z.B::

http://localhost/2018-uebung-04-DanielGasserFH/aufgabe02/anmelden
--> wechselt zu index
http://localhost/2018-uebung-04-DanielGasserFH/aufgabe02/index



• Sehen Sie sich mal ein paar Views in dem Ordner includes/views an. Werfen
Sie insbesondere einen Blick auf die Datei includes/views/parts/header.php



• Versuchen Sie nachzuvollziehen wie der View die Daten erhält. Offenbar wird
im Controller mittels $this->view->variablenname = "wert“; ein Wert gesetzt.
Auf diesen kann dann im view selbst mit $this->variablenname zugegriffen
werden.